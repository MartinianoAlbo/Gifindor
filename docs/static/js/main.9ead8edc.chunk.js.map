{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","className","onSubmit","e","preventDefault","trim","length","xmlns","width","height","viewBox","stroke","fill","d","cx","cy","r","x1","y1","x2","y2","type","placeholder","value","onChange","target","getGif","categorias","a","url","encodeURI","fetch","resp","json","data","console","log","gifs","map","img","id","titulo","title","images","downsized_medium","useStyles","makeStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","imageList","icon","color","GifGrid","classes","categoria","loading","state","setState","useEffect","then","imgs","useFetchGifs","ImageList","rowHeight","item","ImageListItem","href","src","alt","ImageListItemBar","subtitle","actionIcon","IconButton","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9ead8edc.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nfunction AddCategory({setCategorias}) {\n\n   const [inputValue, setInputValue] = useState('');\n\n   const handleInputChange = e => {\n      setInputValue(e.target.value);\n      \n   }  \n\n   const handleSubmit = e => {\n      e.preventDefault();\n\n      if(inputValue.trim().length > 2 ){\n\n         setCategorias([inputValue]);\n         setInputValue(' ');\n\n      }\n      \n   }\n\n   return (\n\n      <form className='row-cols-1' onSubmit={handleSubmit}>\n      \n         <div className=\"input-group mb-3 my-4 barra-busqueda\">\n            <div className=\"input-group-text \">\n               <span className=\"\">\n               <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"icon icon-tabler icon-tabler-search\" width=\"38\" height=\"38\" viewBox=\"0 0 24 24\" stroke-width=\"2.5\" stroke=\"#000000e5\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n               <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/>\n               <circle cx=\"10\" cy=\"10\" r=\"7\" />\n               <line x1=\"21\" y1=\"21\" x2=\"15\" y2=\"15\" />\n               </svg>\n\n               </span>\n            </div>\n\n            <input\n               type=\"text\"\n               className=\"form-control\"\n               placeholder=\"Que Gif estas Buscando?\"\n               aria-describedby=\"basic-addon1\"\n               value={inputValue}\n               onChange={handleInputChange}\n            />\n\n         </div>\n         \n      </form>  \n\n   )\n}\n\nAddCategory.propTypes = {\n   setCategorias: PropTypes.func.isRequired\n}\n\nexport default AddCategory\n\n","const getGif = async (categorias) => {\n    const url =\n      `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categorias)}&limit=50&api_key=qJ0wo4Fc6iy7wd4PxJLP4PLdL3UaiYZz`\n    const resp = await fetch(url)\n    const { data } = await resp.json()\n\n    console.log(data);\n\n    const gifs = data.map((img) => {\n      return {\n        id: img.id,\n        titulo: img.title,\n        url: img.images?.downsized_medium.url,\n      }\n    })\n\n    console.log(gifs);\n\n    return gifs;\n  }\n\nexport default getGif;","import React from 'react'\nimport { useNavigate } from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem'\nimport { makeStyles } from '@material-ui/core/styles'\nimport ImageList from '@material-ui/core/ImageList'\nimport ImageListItem from '@material-ui/core/ImageListItem'\nimport ImageListItemBar from '@material-ui/core/ImageListItemBar'\nimport IconButton from '@material-ui/core/IconButton'\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  imageList: {\n    width: 'auto',\n    height: 1024,\n  \n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)',\n  },\n}))\n\n\n\nfunction GifGrid({ categorias }) {\n  \n  const classes = useStyles()\n  const { data: images, loading } = useFetchGifs(categorias);\n  \n\n  return (\n    <>\n      <h1>\n        <strong>{categorias}</strong>\n      </h1>\n\n      {loading && <div className=\"spinner animate__fadeInDownBig\"></div>}\n\n      <div className={classes.root}>\n        <ImageList rowHeight={180} className={classes.imageList}>\n          {images.map((item) => (\n            \n            <ImageListItem key={item.id}>\n            \n              <img href={item.url} src={item.url} alt={item.titulo} />\n              \n              <ImageListItemBar\n                title={item.titulo}\n                subtitle={<span>by: AlvaroDev </span>}\n                actionIcon={\n                  <IconButton\n                    aria-label={`info about ${item.titulo}`}\n                    className={classes.icon}\n                  >\n\n                  </IconButton>\n                }\n              />\n            </ImageListItem>\n          ))}\n        </ImageList>\n      </div>\n\n    </>\n  )\n}\n\nexport default GifGrid\n","import { useState, useEffect } from 'react'\nimport getGif from '../helpers/getGifs'\n\nexport const useFetchGifs = (categoria) => {\n  const [state, setState] = useState({\n    data: [],\n    titulo: '',\n    loading: true,\n  })\n\n  useEffect(() => {\n    getGif(categoria).then((imgs) => {\n      setState({\n        data: imgs,\n        titulo: imgs.titulo,\n        loading: false,\n      })\n    })\n  }, [categoria])\n\n  console.log(state);\n\n  return state\n}\n","import {useState} from \"react\";\nimport AddCategory from \"./components/AddCategory\";\nimport GifGrid from \"./components/GifGrid\";\n\n\nconst GifExpertApp = () => {\n\n   const [categorias, setCategorias] = useState([])\n\n\n   return (\n      <>\n      <div className='titulo'>\n         <h1 className='animate__animated animate__jackInTheBox'>GifinDor</h1>\n      </div>\n      \n\n      <AddCategory setCategorias={setCategorias}/>\n\n      <hr />\n\n         <div className='row p-0'>\n            <ol className='col-sm-12 col-md-12 col-lg-12 cards'>\n               \n               {\n                  categorias.map(categoria =>\n                     <GifGrid\n                        categorias = {categorias}\n                        key = {categoria} \n                     />\n                     )\n               }\n            \n            </ol>\n\n         </div>   \n      </>\n   )\n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/bootstrap.css'\nimport './css/index.css';\nimport GifExpertApp from './GifExpertApp'\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}